# Tech Stack
- Astro
- MDX
- Tailwind CSS
- Pagefind
- Biome

# Project Details

## Project Name

blogger

## Description

This is a blog website built with Astro. It features two content collections: `blog` and `philosophy`. The site uses MDX for content creation and includes features like sitemap generation, icon support, and Tailwind CSS for styling.

## Directory Structure

```text
/
├── public/
│   └── favicon.svg
├── src/
│   ├── layouts/
│   │   └── Layout.astro
│   └── pages/
│       └── index.astro
└── package.json
```

## Important Files

*   `astro.config.mjs`: Astro configuration file
*   `package.json`: npm package configuration file
*   `src/content.config.ts`: Content configuration file
*   `src/pages/`: Directory for defining pages
*   `src/components/`: Directory for defining components
*   `src/layouts/`: Directory for defining layouts
*   `article/`: Directory for storing articles

# Cline Rules

This document outlines the rules Cline should follow when working with this project.

## Git Workflow

- When modifying files, commit directly to the main branch
- Commit messages should be concise and descriptive

## Code Style

- Write comments in Japanese
- Run `bun run norika` to ensure consistent code style

## Content Management

- All blog content should be stored in the appropriate directory (article/blog/ or article/philosophy/)
- Image assets should be optimized before adding to the project
- MDX files should include proper frontmatter with required metadata

## Development Practices

- Always run tests before submitting changes
- Document API changes in the relevant documentation
- Consider performance implications when adding new features
- Prefer native Astro components when possible instead of client-side frameworks

## Security Considerations

- Don't commit sensitive information (API keys, credentials)
- Validate and sanitize all user inputs
- Keep dependencies updated to avoid security vulnerabilities
