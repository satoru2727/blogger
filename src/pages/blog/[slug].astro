---
import { getCollection, render } from "astro:content";
import Header from "../../components/Header.astro";
import Layout from "../../layouts/Layout.astro";
export async function getStaticPaths() {
	const allBlogPosts = await getCollection("blog");
	return allBlogPosts.map((post) => ({
		params: { slug: post.id },
		props: { post },
	}));
}
const { post } = Astro.props;
const jsonLd = {
  "@context": "https://schema.org",
  "@type": "BlogPosting",
  "headline": post.data.title,
  "url": Astro.url.toString(),
  "keywords": post.data.tag,
  "datePublished": new Date(post.data.publishedAt).toISOString(),
  "publisher": {
    "@type": "Organization",
    "name": "satoru.work",
    "url": "https://satoru.work"
  },
  ...(post.data.updatedAt && {
    "dateModified": new Date(post.data.updatedAt).toISOString()
  })
};

const structuredData = `<script type="application/ld+json">${JSON.stringify(jsonLd, null, 2)}</script>`;
const meta = `<title>${post.data.title}</title> ${structuredData}`;
const { Content } = await render(post);
const DatetoString = (stdate) => {
	const date = new Date(stdate);
	return `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日`;
};
import tocbot from "tocbot";
---
<Layout meta={meta}>
	<Header/>
	<main>
		<h1 class="text-center text-2xl md:text-4xl font-bold">{post.data.title}</h1>
		<div class="text-sm flex mx-auto justify-center">
			<div class="mx-2">
				<span class="block me-2 px-2.5 py-0.5 rounded-full text-white bg-primary">Published</span>
				<span class="block">{DatetoString(post.data.publishedAt)}</span>
			</div>
			{post.data.updatedAt && (
			<div class="mx-2">
        		<span class="block me-2 px-2.5 py-0.5 rounded-full text-white bg-primary">Updated</span>
        		<span class="block">{DatetoString(post.data.updatedAt)}</span>
    			</div>
				)}
			<div class="mx-2">
				<span class="block me-2 px-2.5 py-0.5 rounded-full text-white bg-primary">Tags</span>
				{post.data.tag.map((tag) => (
				<a href={"/blog/tags/"+ tag} class="text-primary me-2 px-2.5 py-0.5 rounded-full">#{tag}</a>
				))}
			</div>
		</div>
		<div class="flex flex-col lg:flex-row-reverse w-full">
				<div class="js-toc w-full lg:w-1/4"></div>
				<article id="main-content" class="prose w-full md:w-4/5 md:ml-8 md:mr-auto js-toc-content">
				<Content />
				</article>
		</div>
<script>
	import * as tocbot from 'tocbot'
	tocbot.init({
  // Where to render the table of contents.
  tocSelector: '.js-toc',
  // Where to grab the headings to build the table of contents.
  contentSelector: '.js-toc-content',
  // Which headings to grab inside of the contentSelector element.
  headingSelector: 'h1, h2, h3',
  // For headings inside relative or absolute positioned containers within content.
  hasInnerContainers: true,
	});
</script>
</Layout>
