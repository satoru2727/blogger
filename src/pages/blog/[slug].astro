---
import { getCollection, render } from "astro:content";
import Header from "../../components/Header.astro";
import Layout from "../../layouts/Layout.astro";
export async function getStaticPaths() {
	const allBlogPosts = await getCollection("blog");
	return allBlogPosts.map((post) => ({
		params: { slug: post.id },
		props: { post },
	}));
}
const { post } = Astro.props;
const meta = `<title>${post.data.title}</title>`;
const { Content } = await render(post);
const DatetoString = (stdate) => {
	const date = new Date(stdate);
	`${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日`;
};
import tocbot from "tocbot";
---
<Layout>
	<Header meta={meta} />
	<main>
		<h1 class="text-2xl md:text-4xl font-bold">{post.data.title}</h1>
		<div class="text-sm text-gray-500 flex">
			<div>
				<span class="block">Published</span>
				<span class="block">{DatetoString(post.data.publishedAt)}</span>
			</div>
			{post.data.updatedAt && (
    <div>
        <span class="block">Updated</span>
        <span class="block">{DatetoString(post.data.updatedAt)}</span>
    </div>
)}
			<div>
			</div>
		</div>
		<div class="flex flex-wrap">
				<div class="js-toc">
				</div>
				<article class="prose w-full lg:w-1/2 js-toc-content">
				<Content />
				</article>
		</div>
<script>
	tocbot.init({
  // Where to render the table of contents.
  tocSelector: '.js-toc',
  // Where to grab the headings to build the table of contents.
  contentSelector: '.js-toc-content',
  // Which headings to grab inside of the contentSelector element.
  headingSelector: 'h1, h2, h3',
  // For headings inside relative or absolute positioned containers within content.
  hasInnerContainers: true,
	});
</script>
</Layout>
